apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  labels:
    app.kubernetes.io/instance: elastic-monitoring
  name: combo
  namespace: elastic-mon
spec:
  nodeSets:
    - count: 1
      name: combo
      podTemplate:
        spec:
          config:
           node.roles: ["data", "master", "ingest"]
          containers:
            - env:
                - name: ES_JAVA_OPTS
                  value: '-Xms1g -Xmx1g'
              name: elasticsearch
              resources:
                limits: {}
                requests:
                  cpu: 250m
                  memory: 2Gi
          initContainers:
            - command:
                - /bin/bash
                - '-exc'
                - |
                  CURRENT=`sysctl -n vm.max_map_count`;
                  DESIRED="262144";
                  if [ "$DESIRED" -gt "$CURRENT" ]; then
                      sysctl -w vm.max_map_count=262144;
                  fi;
                  CURRENT=`sysctl -n fs.file-max`;
                  DESIRED="65536";
                  if [ "$DESIRED" -gt "$CURRENT" ]; then
                      sysctl -w fs.file-max=65536;
                  fi;
              image: 'docker.io/bitnami/bitnami-shell:10-debian-10-r248'
              imagePullPolicy: IfNotPresent
              name: sysctl
              resources:
                limits: {}
                requests: {}
              securityContext:
                privileged: true
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 64Gi
  version: 7.16.1
  volumeClaimDeletePolicy: DeleteOnScaledownOnly

---

apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: main
spec:
  version: 7.17.18
  nodeSets:
  - name: master
    count: 1
    config:
      node.master: true
      node.data: false
      node.ingest: false 
      xpack.ml.enabled: true
      xpack.monitoring.exporters.id1.type: http
      xpack.monitoring.exporters.id1.auth.password: OUp7PM9fd0nLvV3ajS3qVW
      xpack.monitoring.exporters.id1.auth.username: marvel_user
      node.store.allow_mmap: false
  - name: ingest
    count: 1
    config:
      node.master: false
      node.data: true
      node.ingest: true
      xpack.monitoring.exporters.id1.type: http
      xpack.monitoring.exporters.id1.auth.password: OUp7PM9fd0nLvV3ajS3qVW
      xpack.monitoring.exporters.id1.auth.username: marvel_user
      xpack.ml.enabled: true
      node.store.allow_mmap: false  
  - name: storage
    count: 1
    config:
      node.roles: ["data_warm", "ingest", "data"]      
      node.store.allow_mmap: false
  - name: coordinator
    count: 1
    config:
      node.roles: [ ]
      xpack.ml.enabled: true
      xpack.monitoring.exporters.id1.type: http
      xpack.monitoring.exporters.id1.auth.password: OUp7PM9fd0nLvV3ajS3qVW
      xpack.monitoring.exporters.id1.auth.username: marvel_user
      node.store.allow_mmap: false
---      
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
spec:
  selector:
    matchLabels:
      component: kibana
  template:
    metadata:
      labels:
        component: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:7.12.0
        env:
        - name: ELASTICSEARCH_URL
          value: http://10.108.118.238:9200
        - name: XPACK_SECURITY_ENABLED
          value: "false"
        - name: ELASTICSEARCH_USERNAME
          valueFrom:
            configMapKeyRef:
              name: kibana-config
              key: elasticsearch_username
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: kibana-config
              key: elasticsearch_password
        envFrom:
        - configMapRef:
            name: kibana-config
        ports:
        - containerPort: 5601
          name: http
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  labels:
    component: kibana
spec:
  type: NodePort
  selector:
    component: kibana
  ports:
  - port: 5601
    targetPort: 5601
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-config
  labels:
    component: kibana
data:
  elasticsearch_username: elastic
  elasticsearch_password: ismail-wajdi-7415b3176
